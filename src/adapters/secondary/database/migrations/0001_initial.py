# Generated by Django 5.0.6 on 2025-09-16 06:19

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=150, verbose_name="Nombres"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=150, verbose_name="Apellidos"),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("PRACTICANTE", "Practicante"),
                            ("SUPERVISOR", "Supervisor"),
                            ("COORDINADOR", "Coordinador"),
                            ("SECRETARIA", "Secretaria"),
                            ("ADMINISTRADOR", "Administrador"),
                        ],
                        max_length=20,
                        verbose_name="Rol",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="Es staff"),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de registro"
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Último acceso"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado en"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado en"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario",
                "verbose_name_plural": "Usuarios",
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "ruc",
                    models.CharField(
                        max_length=11,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d{11}$", "RUC debe tener 11 dígitos"
                            )
                        ],
                        verbose_name="RUC",
                    ),
                ),
                (
                    "razon_social",
                    models.CharField(max_length=200, verbose_name="Razón social"),
                ),
                (
                    "nombre_comercial",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Nombre comercial",
                    ),
                ),
                (
                    "direccion",
                    models.TextField(blank=True, null=True, verbose_name="Dirección"),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True, max_length=15, null=True, verbose_name="Teléfono"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="Email"
                    ),
                ),
                (
                    "sector_economico",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Sector económico",
                    ),
                ),
                (
                    "tamaño_empresa",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MICRO", "Microempresa"),
                            ("PEQUEÑA", "Pequeña empresa"),
                            ("MEDIANA", "Mediana empresa"),
                            ("GRANDE", "Gran empresa"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Tamaño",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING_VALIDATION", "Pendiente de validación"),
                            ("ACTIVE", "Activa"),
                            ("INACTIVE", "Inactiva"),
                            ("SUSPENDED", "Suspendida"),
                            ("BLACKLISTED", "Lista negra"),
                        ],
                        default="PENDING_VALIDATION",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "fecha_validacion",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de validación"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado en"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado en"),
                ),
            ],
            options={
                "verbose_name": "Empresa",
                "verbose_name_plural": "Empresas",
                "db_table": "companies",
                "indexes": [
                    models.Index(fields=["ruc"], name="companies_ruc_62d05f_idx"),
                    models.Index(fields=["status"], name="companies_status_2cde5e_idx"),
                    models.Index(
                        fields=["sector_economico"], name="companies_sector__0eacc9_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("titulo", models.CharField(max_length=200, verbose_name="Título")),
                ("mensaje", models.TextField(verbose_name="Mensaje")),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("INFO", "Información"),
                            ("SUCCESS", "Éxito"),
                            ("WARNING", "Advertencia"),
                            ("ERROR", "Error"),
                        ],
                        default="INFO",
                        max_length=10,
                        verbose_name="Tipo",
                    ),
                ),
                ("leida", models.BooleanField(default=False, verbose_name="Leída")),
                (
                    "fecha_lectura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de lectura"
                    ),
                ),
                (
                    "accion_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="URL de acción"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado en"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado en"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notificación",
                "verbose_name_plural": "Notificaciones",
                "db_table": "notifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Practice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("titulo", models.CharField(max_length=200, verbose_name="Título")),
                ("descripcion", models.TextField(verbose_name="Descripción")),
                ("objetivos", models.JSONField(default=list, verbose_name="Objetivos")),
                (
                    "fecha_inicio",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de inicio"
                    ),
                ),
                (
                    "fecha_fin",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de fin"
                    ),
                ),
                (
                    "horas_totales",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Horas totales"
                    ),
                ),
                (
                    "modalidad",
                    models.CharField(
                        choices=[
                            ("PRESENCIAL", "Presencial"),
                            ("REMOTO", "Remoto"),
                            ("HIBRIDO", "Híbrido"),
                        ],
                        default="PRESENCIAL",
                        max_length=20,
                        verbose_name="Modalidad",
                    ),
                ),
                (
                    "area_practica",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Área de práctica",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Borrador"),
                            ("PENDING", "Pendiente"),
                            ("APPROVED", "Aprobada"),
                            ("IN_PROGRESS", "En progreso"),
                            ("COMPLETED", "Completada"),
                            ("CANCELLED", "Cancelada"),
                            ("SUSPENDED", "Suspendida"),
                        ],
                        default="DRAFT",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "calificacion_final",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(20),
                        ],
                        verbose_name="Calificación final",
                    ),
                ),
                (
                    "observaciones",
                    models.TextField(blank=True, verbose_name="Observaciones"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado en"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado en"),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="practices",
                        to="database.company",
                    ),
                ),
            ],
            options={
                "verbose_name": "Práctica",
                "verbose_name_plural": "Prácticas",
                "db_table": "practices",
            },
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("PRACTICE_AGREEMENT", "Convenio de práctica"),
                            ("EVALUATION_REPORT", "Reporte de evaluación"),
                            ("FINAL_REPORT", "Reporte final"),
                            ("COMPANY_VALIDATION", "Validación de empresa"),
                            ("STUDENT_CV", "CV del estudiante"),
                            ("ACADEMIC_RECORD", "Récord académico"),
                        ],
                        max_length=30,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "nombre_archivo",
                    models.CharField(max_length=255, verbose_name="Nombre del archivo"),
                ),
                (
                    "archivo",
                    models.FileField(
                        upload_to="documents/%Y/%m/", verbose_name="Archivo"
                    ),
                ),
                (
                    "tamaño_bytes",
                    models.PositiveIntegerField(verbose_name="Tamaño en bytes"),
                ),
                (
                    "mime_type",
                    models.CharField(max_length=100, verbose_name="Tipo MIME"),
                ),
                (
                    "aprobado",
                    models.BooleanField(default=False, verbose_name="Aprobado"),
                ),
                (
                    "fecha_aprobacion",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de aprobación"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado en"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado en"),
                ),
                (
                    "aprobado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "subido_por",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="uploaded_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "practice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="database.practice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Documento",
                "verbose_name_plural": "Documentos",
                "db_table": "documents",
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "codigo_estudiante",
                    models.CharField(
                        max_length=10,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^20\\d{8}$", "Formato inválido. Ej: 2021001234"
                            )
                        ],
                        verbose_name="Código de estudiante",
                    ),
                ),
                (
                    "documento_tipo",
                    models.CharField(
                        choices=[
                            ("DNI", "DNI"),
                            ("CE", "Carnet de Extranjería"),
                            ("PASSPORT", "Pasaporte"),
                        ],
                        max_length=10,
                        verbose_name="Tipo de documento",
                    ),
                ),
                (
                    "documento_numero",
                    models.CharField(max_length=20, verbose_name="Número de documento"),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True, max_length=15, null=True, verbose_name="Teléfono"
                    ),
                ),
                (
                    "direccion",
                    models.TextField(blank=True, null=True, verbose_name="Dirección"),
                ),
                (
                    "carrera",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Carrera"
                    ),
                ),
                (
                    "semestre_actual",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                        verbose_name="Semestre actual",
                    ),
                ),
                (
                    "promedio_ponderado",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(20),
                        ],
                        verbose_name="Promedio ponderado",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado en"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado en"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Estudiante",
                "verbose_name_plural": "Estudiantes",
                "db_table": "students",
            },
        ),
        migrations.AddField(
            model_name="practice",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="practices",
                to="database.student",
            ),
        ),
        migrations.CreateModel(
            name="Supervisor",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "documento_tipo",
                    models.CharField(
                        choices=[
                            ("DNI", "DNI"),
                            ("CE", "Carnet de Extranjería"),
                            ("PASSPORT", "Pasaporte"),
                        ],
                        max_length=10,
                        verbose_name="Tipo de documento",
                    ),
                ),
                (
                    "documento_numero",
                    models.CharField(max_length=20, verbose_name="Número de documento"),
                ),
                ("cargo", models.CharField(max_length=100, verbose_name="Cargo")),
                (
                    "telefono",
                    models.CharField(
                        blank=True, max_length=15, null=True, verbose_name="Teléfono"
                    ),
                ),
                (
                    "años_experiencia",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Años de experiencia"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado en"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado en"),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supervisors",
                        to="database.company",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supervisor_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Supervisor",
                "verbose_name_plural": "Supervisores",
                "db_table": "supervisors",
            },
        ),
        migrations.AddField(
            model_name="practice",
            name="supervisor",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="practices",
                to="database.supervisor",
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="users_email_4b85f2_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["role"], name="users_role_0ace22_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["is_active"], name="users_is_acti_847b48_idx"),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["user", "leida"], name="notificatio_user_id_aa50e0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["created_at"], name="notificatio_created_e4c995_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["practice"], name="documents_practic_371931_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(fields=["tipo"], name="documents_tipo_864ac6_idx"),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["aprobado"], name="documents_aprobad_b2f760_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="student",
            index=models.Index(
                fields=["codigo_estudiante"], name="students_codigo__ac0b7f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="student",
            index=models.Index(
                fields=["documento_numero"], name="students_documen_390802_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="student",
            index=models.Index(fields=["carrera"], name="students_carrera_821893_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="student",
            unique_together={("documento_tipo", "documento_numero")},
        ),
        migrations.AddIndex(
            model_name="supervisor",
            index=models.Index(
                fields=["documento_numero"], name="supervisors_documen_6dafe3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supervisor",
            index=models.Index(
                fields=["company"], name="supervisors_company_ed174e_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="supervisor",
            unique_together={("documento_tipo", "documento_numero")},
        ),
        migrations.AddIndex(
            model_name="practice",
            index=models.Index(fields=["student"], name="practices_student_d50f66_idx"),
        ),
        migrations.AddIndex(
            model_name="practice",
            index=models.Index(fields=["company"], name="practices_company_0a2368_idx"),
        ),
        migrations.AddIndex(
            model_name="practice",
            index=models.Index(
                fields=["supervisor"], name="practices_supervi_0a9f34_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="practice",
            index=models.Index(fields=["status"], name="practices_status_117359_idx"),
        ),
        migrations.AddIndex(
            model_name="practice",
            index=models.Index(
                fields=["fecha_inicio"], name="practices_fecha_i_d4e062_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="practice",
            index=models.Index(
                fields=["fecha_fin"], name="practices_fecha_f_d2eed9_idx"
            ),
        ),
    ]
