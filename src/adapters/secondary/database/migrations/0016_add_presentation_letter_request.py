# Generated by Django 5.0.6 on 2025-10-31 21:38

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('database', '0015_remove_avatar_name_field'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('nivel_acceso', models.IntegerField(db_column='nivel_acceso', default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Nivel Acceso')),
                ('fecha_asignacion', models.DateField(auto_now_add=True, db_column='fecha_asignacion', verbose_name='Fecha Asignación')),
            ],
            options={
                'verbose_name': 'Perfil Administrador',
                'verbose_name_plural': 'Perfiles Administradores',
                'db_table': 'upeu_perfil_admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='nombre', max_length=100, verbose_name='Nombre')),
                ('descripcion', models.TextField(blank=True, db_column='descripcion', null=True, verbose_name='Descripción')),
                ('activa', models.BooleanField(db_column='activa', default=True, verbose_name='Activa')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_column='fecha_creacion', verbose_name='Fecha Creación')),
            ],
            options={
                'verbose_name': 'Rama/Especialidad',
                'verbose_name_plural': 'Ramas/Especialidades',
                'db_table': 'upeu_rama',
                'ordering': ['nombre'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoordinatorSchool',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('fecha_asignacion', models.DateField(auto_now_add=True, db_column='fecha_asignacion', verbose_name='Fecha Asignación')),
                ('fecha_fin', models.DateField(blank=True, db_column='fecha_fin', null=True, verbose_name='Fecha Fin')),
                ('activo', models.BooleanField(db_column='activo', default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Coordinador de Escuela',
                'verbose_name_plural': 'Coordinadores de Escuelas',
                'db_table': 'upeu_coordinador_escuela',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PracticeEvaluation',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('tipo_evaluador', models.CharField(choices=[('SUPERVISOR', 'Supervisor de empresa'), ('COORDINADOR', 'Coordinador académico')], db_column='tipo_evaluador', default='SUPERVISOR', max_length=20, verbose_name='Tipo de evaluador')),
                ('periodo_evaluacion', models.CharField(blank=True, choices=[('INICIAL', 'Evaluación inicial'), ('MENSUAL_1', 'Evaluación mensual 1'), ('MENSUAL_2', 'Evaluación mensual 2'), ('MENSUAL_3', 'Evaluación mensual 3'), ('FINAL', 'Evaluación final')], db_column='periodo_evaluacion', max_length=50, null=True, verbose_name='Periodo')),
                ('criterios_evaluacion', models.JSONField(blank=True, db_column='criterios_evaluacion', default=dict, help_text='JSON con criterios específicos y puntajes', verbose_name='Criterios de evaluación')),
                ('puntaje_total', models.DecimalField(blank=True, db_column='puntaje_total', decimal_places=2, help_text='Puntaje de 0 a 100', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Puntaje total')),
                ('comentarios', models.TextField(blank=True, db_column='comentarios', null=True, verbose_name='Comentarios')),
                ('recomendaciones', models.TextField(blank=True, db_column='recomendaciones', null=True, verbose_name='Recomendaciones')),
                ('fecha_evaluacion', models.DateTimeField(auto_now_add=True, db_column='fecha_evaluacion', verbose_name='Fecha de evaluación')),
            ],
            options={
                'verbose_name': 'Evaluación de Práctica',
                'verbose_name_plural': 'Evaluaciones de Prácticas',
                'db_table': 'upeu_evaluacion_practica',
                'ordering': ['-fecha_evaluacion'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoleNew',
            fields=[
                ('id', models.UUIDField(db_column='id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(db_column='code', max_length=50, unique=True, verbose_name='Código')),
                ('name', models.CharField(db_column='name', max_length=100, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, db_column='description', null=True, verbose_name='Descripción')),
                ('is_active', models.BooleanField(db_column='is_active', default=True, verbose_name='Activo')),
                ('is_system', models.BooleanField(db_column='is_system', default=False, verbose_name='Es del sistema')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at', verbose_name='Creado en')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at', verbose_name='Actualizado en')),
            ],
            options={
                'verbose_name': 'Rol Nuevo',
                'verbose_name_plural': 'Roles Nuevos',
                'db_table': 'roles',
                'ordering': ['name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='nombre', max_length=100, verbose_name='Nombre')),
                ('codigo', models.CharField(db_column='codigo', max_length=10, unique=True, verbose_name='Código')),
                ('descripcion', models.TextField(blank=True, db_column='descripcion', null=True, verbose_name='Descripción')),
                ('estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('INACTIVO', 'Inactivo'), ('SUSPENDIDO', 'Suspendido'), ('PENDIENTE', 'Pendiente')], db_column='estado', default='ACTIVO', max_length=20, verbose_name='Estado')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_column='fecha_creacion', verbose_name='Fecha Creación')),
            ],
            options={
                'verbose_name': 'Escuela Profesional',
                'verbose_name_plural': 'Escuelas Profesionales',
                'db_table': 'upeu_escuela',
                'ordering': ['codigo'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SecretariaProfile',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('fecha_asignacion', models.DateField(auto_now_add=True, db_column='fecha_asignacion', verbose_name='Fecha Asignación')),
                ('permisos_especiales', models.JSONField(blank=True, db_column='permisos_especiales', default=dict, verbose_name='Permisos Especiales')),
            ],
            options={
                'verbose_name': 'Perfil Secretaria',
                'verbose_name_plural': 'Perfiles Secretarias',
                'db_table': 'upeu_perfil_secretaria',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('codigo', models.CharField(db_column='codigo', max_length=10, unique=True, verbose_name='Código Estudiante')),
                ('semestre', models.IntegerField(db_column='semestre', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Semestre')),
                ('promedio', models.DecimalField(db_column='promedio', decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Promedio')),
                ('fecha_nacimiento', models.DateField(db_column='fecha_nacimiento', verbose_name='Fecha Nacimiento')),
                ('direccion', models.TextField(blank=True, db_column='direccion', null=True, verbose_name='Dirección')),
                ('cv_path', models.CharField(blank=True, db_column='cv_path', max_length=255, null=True, verbose_name='Ruta CV')),
                ('fecha_cv_subido', models.DateTimeField(blank=True, db_column='fecha_cv_subido', null=True, verbose_name='Fecha CV Subido')),
                ('estado_academico', models.CharField(choices=[('REGULAR', 'Regular'), ('IRREGULAR', 'Irregular'), ('INACTIVO', 'Inactivo'), ('EGRESADO', 'Egresado')], db_column='estado_academico', default='REGULAR', max_length=20, verbose_name='Estado Académico')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_column='fecha_creacion', verbose_name='Fecha Creación')),
            ],
            options={
                'verbose_name': 'Perfil Practicante',
                'verbose_name_plural': 'Perfiles Practicantes',
                'db_table': 'upeu_perfil_practicante',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuperAdminProfile',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('fecha_asignacion', models.DateField(auto_now_add=True, db_column='fecha_asignacion', verbose_name='Fecha Asignación')),
                ('permisos_totales', models.BooleanField(db_column='permisos_totales', default=True, verbose_name='Permisos Totales')),
            ],
            options={
                'verbose_name': 'Perfil Super Administrador',
                'verbose_name_plural': 'Perfiles Super Administradores',
                'db_table': 'upeu_perfil_superadmin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SupervisorProfile',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('cargo', models.CharField(db_column='cargo', max_length=100, verbose_name='Cargo')),
                ('telefono_trabajo', models.CharField(blank=True, db_column='telefono_trabajo', max_length=15, null=True, verbose_name='Teléfono Trabajo')),
                ('correo_trabajo', models.EmailField(blank=True, db_column='correo_trabajo', max_length=254, null=True, verbose_name='Correo Trabajo')),
                ('años_experiencia', models.IntegerField(db_column='años_experiencia', default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Años Experiencia')),
                ('especialidad', models.CharField(blank=True, db_column='especialidad', max_length=100, null=True, verbose_name='Especialidad')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_column='fecha_creacion', verbose_name='Fecha Creación')),
            ],
            options={
                'verbose_name': 'Perfil Supervisor',
                'verbose_name_plural': 'Perfiles Supervisores',
                'db_table': 'upeu_perfil_supervisor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PracticeStatusHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('estado_anterior', models.CharField(blank=True, max_length=50, null=True, verbose_name='Estado anterior')),
                ('estado_nuevo', models.CharField(max_length=50, verbose_name='Estado nuevo')),
                ('motivo', models.TextField(blank=True, null=True, verbose_name='Motivo del cambio')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadata adicional')),
                ('fecha_cambio', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de cambio')),
            ],
            options={
                'verbose_name': 'Historial de Estado de Práctica',
                'verbose_name_plural': 'Historiales de Estados de Prácticas',
                'db_table': 'practice_status_history',
                'ordering': ['-fecha_cambio'],
            },
        ),
        migrations.CreateModel(
            name='PresentationLetterRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ep', models.CharField(help_text='Ejemplo: Ingeniería de Sistemas', max_length=200, verbose_name='E.P. (Escuela Profesional)')),
                ('student_full_name', models.CharField(max_length=200, verbose_name='Nombre Completo del Alumno')),
                ('student_code', models.CharField(max_length=20, verbose_name='Código del Estudiante')),
                ('year_of_study', models.CharField(help_text='Ejemplo: Quinto año', max_length=50, verbose_name='Año de Estudios')),
                ('study_cycle', models.CharField(help_text='Ejemplo: IX', max_length=10, verbose_name='Ciclo de Estudios')),
                ('student_email', models.EmailField(max_length=100, verbose_name='Email del Estudiante')),
                ('company_name', models.CharField(help_text='Razón social de la empresa', max_length=255, verbose_name='Nombre de la Empresa')),
                ('company_representative', models.CharField(help_text='Persona de contacto en la empresa', max_length=200, verbose_name='Nombre del Representante')),
                ('company_position', models.CharField(help_text='Ejemplo: Gerente de Recursos Humanos', max_length=100, verbose_name='Cargo del Representante / Grado Académico')),
                ('company_phone', models.CharField(max_length=50, verbose_name='Teléfono - Fax')),
                ('company_address', models.TextField(verbose_name='Dirección de la Empresa')),
                ('practice_area', models.CharField(help_text='Ejemplo: Desarrollo de Software, Redes, Base de Datos', max_length=100, verbose_name='Área de Práctica')),
                ('start_date', models.DateField(help_text='Fecha aproximada de inicio de práctica', verbose_name='Fecha de Inicio')),
                ('status', models.CharField(choices=[('DRAFT', 'Borrador'), ('PENDING', 'Pendiente de revisión'), ('APPROVED', 'Aprobado'), ('REJECTED', 'Rechazado'), ('GENERATED', 'Carta generada'), ('USED', 'Usada en práctica')], default='DRAFT', max_length=20, verbose_name='Estado')),
                ('rejection_reason', models.TextField(blank=True, help_text='Razón por la cual la secretaria rechazó la solicitud', null=True, verbose_name='Motivo de Rechazo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('submitted_at', models.DateTimeField(blank=True, help_text='Cuando se envió a secretaría', null=True, verbose_name='Fecha de Envío')),
                ('reviewed_at', models.DateTimeField(blank=True, help_text='Cuando la secretaria revisó', null=True, verbose_name='Fecha de Revisión')),
            ],
            options={
                'verbose_name': 'Solicitud de Carta de Presentación',
                'verbose_name_plural': 'Solicitudes de Carta de Presentación',
                'db_table': 'presentation_letter_requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='student',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='student',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='supervisor',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='supervisor',
            name='company',
        ),
        migrations.RemoveField(
            model_name='supervisor',
            name='user',
        ),
        migrations.AlterModelOptions(
            name='company',
            options={'managed': False, 'ordering': ['nombre'], 'verbose_name': 'Empresa', 'verbose_name_plural': 'Empresas'},
        ),
        migrations.AlterModelOptions(
            name='notification',
            options={'managed': False, 'ordering': ['-created_at'], 'verbose_name': 'Notificación', 'verbose_name_plural': 'Notificaciones'},
        ),
        migrations.AlterModelOptions(
            name='permission',
            options={'managed': False, 'verbose_name': 'Permiso', 'verbose_name_plural': 'Permisos'},
        ),
        migrations.AlterModelOptions(
            name='practice',
            options={'managed': False, 'ordering': ['-fecha_creacion'], 'verbose_name': 'Práctica', 'verbose_name_plural': 'Prácticas'},
        ),
        migrations.AlterModelOptions(
            name='role',
            options={'managed': False, 'ordering': ['nombre'], 'verbose_name': 'Rol', 'verbose_name_plural': 'Roles'},
        ),
        migrations.AlterModelOptions(
            name='rolepermission',
            options={'managed': False, 'verbose_name': 'Permiso de Rol', 'verbose_name_plural': 'Permisos de Roles'},
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'managed': False, 'verbose_name': 'Usuario', 'verbose_name_plural': 'Usuarios'},
        ),
        migrations.AlterModelOptions(
            name='userpermission',
            options={'managed': False, 'verbose_name': 'Permiso de Usuario', 'verbose_name_plural': 'Permisos de Usuarios'},
        ),
        migrations.AddField(
            model_name='document',
            name='observations',
            field=models.TextField(blank=True, null=True, verbose_name='Observaciones'),
        ),
        migrations.AddField(
            model_name='document',
            name='previous_version',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='newer_versions', to='database.document', verbose_name='Versión anterior'),
        ),
        migrations.AddField(
            model_name='document',
            name='status',
            field=models.CharField(choices=[('PENDING', 'Pendiente de revisión'), ('VALIDATED', 'Validado'), ('REJECTED', 'Rechazado'), ('OBSERVED', 'Observado')], default='PENDING', max_length=20, verbose_name='Estado'),
        ),
        migrations.AddField(
            model_name='document',
            name='validated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_documents', to=settings.AUTH_USER_MODEL, verbose_name='Validado por'),
        ),
        migrations.AddField(
            model_name='document',
            name='validation_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Fecha de validación'),
        ),
        migrations.AddField(
            model_name='document',
            name='version',
            field=models.PositiveIntegerField(default=1, verbose_name='Versión'),
        ),
        migrations.AlterField(
            model_name='document',
            name='tipo',
            field=models.CharField(choices=[('PRACTICE_AGREEMENT', 'Convenio de práctica'), ('EVALUATION_REPORT', 'Reporte de evaluación'), ('FINAL_REPORT', 'Reporte final'), ('COMPANY_VALIDATION', 'Validación de empresa'), ('STUDENT_CV', 'CV del estudiante'), ('ACADEMIC_RECORD', 'Récord académico'), ('MONTHLY_REPORT', 'Reporte mensual'), ('PRACTICE_PLAN', 'Plan de práctica'), ('OTHER', 'Otro')], max_length=30, verbose_name='Tipo'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['status'], name='documents_status_f31a08_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['version'], name='documents_version_c29386_idx'),
        ),
        migrations.AddField(
            model_name='practicestatushistory',
            name='practice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='database.practice'),
        ),
        migrations.AddField(
            model_name='practicestatushistory',
            name='usuario_responsable',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='practice_status_changes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='presentationletterrequest',
            name='assigned_secretary',
            field=models.ForeignKey(blank=True, limit_choices_to={'rol_id__nombre': 'SECRETARIA'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_letter_requests', to=settings.AUTH_USER_MODEL, verbose_name='Secretaria Asignada'),
        ),
        migrations.AddField(
            model_name='presentationletterrequest',
            name='letter_document',
            field=models.ForeignKey(blank=True, help_text='PDF de la carta de presentación generada', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='presentation_letter', to='database.document', verbose_name='Documento de Carta Generada'),
        ),
        migrations.AddField(
            model_name='presentationletterrequest',
            name='student',
            field=models.ForeignKey(help_text='Estudiante que solicita la carta', on_delete=django.db.models.deletion.CASCADE, related_name='presentation_letter_requests', to='database.studentprofile', verbose_name='Estudiante'),
        ),
        migrations.DeleteModel(
            name='Student',
        ),
        migrations.DeleteModel(
            name='Supervisor',
        ),
        migrations.AddIndex(
            model_name='practicestatushistory',
            index=models.Index(fields=['practice'], name='practice_st_practic_d278a5_idx'),
        ),
        migrations.AddIndex(
            model_name='practicestatushistory',
            index=models.Index(fields=['estado_nuevo'], name='practice_st_estado__98471e_idx'),
        ),
        migrations.AddIndex(
            model_name='practicestatushistory',
            index=models.Index(fields=['fecha_cambio'], name='practice_st_fecha_c_578cf3_idx'),
        ),
        migrations.AddIndex(
            model_name='presentationletterrequest',
            index=models.Index(fields=['student', 'status'], name='presentatio_student_faa463_idx'),
        ),
        migrations.AddIndex(
            model_name='presentationletterrequest',
            index=models.Index(fields=['assigned_secretary', 'status'], name='presentatio_assigne_389b9b_idx'),
        ),
        migrations.AddIndex(
            model_name='presentationletterrequest',
            index=models.Index(fields=['status', 'created_at'], name='presentatio_status_abda02_idx'),
        ),
        migrations.AddIndex(
            model_name='presentationletterrequest',
            index=models.Index(fields=['student_code'], name='presentatio_student_de2a56_idx'),
        ),
    ]
